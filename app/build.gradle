apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

//    productFlavors {
//        wandoujia {}
//        baidu {}
//        c360 {}
//        uc {}
//        productFlavors.all { flavor ->
//            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//        }
//    }

    dexOptions {
        javaMaxHeapSize "8g"
    }

    defaultConfig {
        applicationId "com.kdmobi.gui"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName


        //数据统计
        resValue("string", "growingio_project_id", "bd242a0de201e951")
        resValue("string", "growingio_url_scheme", "growing.3129a167c8996c12")


        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "8e624958259a1cc676fed221", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        multiDexEnabled true
    }
    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("${rootProject.ext.gradleFilePath}")
            storePassword "${rootProject.ext.storePassword}"
            keyAlias "${rootProject.ext.keyAlias}"
            keyPassword "${rootProject.ext.keyPassword}"
        }
        relealse {
            storeFile file("${rootProject.ext.gradleFilePath}")
            storePassword "${rootProject.ext.storePassword}"
            keyAlias "${rootProject.ext.keyAlias}"
            keyPassword "${rootProject.ext.keyPassword}"
        }
    }
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            versionNameSuffix "-debug"
            proguardFiles 'proguard-project-debug.txt'
            //是否启用proguard
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.debug

        }

        release {
            // 不显示Log
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled true
            versionNameSuffix ""
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles 'proguard-project.txt'
            //是否启用proguard
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            //签名
            signingConfig signingConfigs.relealse

        }

    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "shengui-v${defaultConfig.versionName}${variant.buildType.versionNameSuffix}.apk"
                if (variant.buildType.name == "release") {
                    if (outputFile.name.endsWith("unaligned.apk")) {
                        output.outputFile = new File(outputFile.parent + "/release/unaligned", fileName)
                    } else {
                        output.outputFile = new File(outputFile.parent + "/release", fileName)
                    }
                } else if (variant.buildType.name == "debug") {
                    if (outputFile.name.endsWith("unaligned.apk")) {
                        output.outputFile = new File(outputFile.parent + "/debug/unaligned", fileName)
                    } else {
                        output.outputFile = new File(outputFile.parent + "/debug", fileName)
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // compile project(path: ':baseview')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.anthonycr.grant:permissions:1.0'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.android.support:appcompat-v7:24.0.0'
    testCompile 'junit:junit:4.12'

    compile 'com.android.support:design:23.4.0'
    compile 'com.zhy:base-adapter:2.0.0'
    compile 'com.android.support:cardview-v7:23.0.0'
    compile files('libs/commons-httpclient-3.1.jar')
    compile files('libs/android-custom-vg.2.6.0.jar')
    compile files('libs/pinyin4j-2.5.0.jar')
    compile 'com.jude:rollviewpager:1.3.2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile files('libs/mta-sdk-1.6.2.jar')
    compile files('libs/open_sdk_r5043.jar')
    compile files('libs/zxing.jar')
    compile project(':jcvideoplayer-lib')
    compile 'cn.jiguang:jpush:2.1.8'
    // 此处以SDK版本为例
    compile 'com.growingio.android:vds-android-agent:0.9.103@aar'
    //数据统计
    compile files('libs/volly-1.0.11.jar')
    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.0.2'
    compile project(':baseview')

    compile 'com.bm.photoview:library:1.4.1'

    compile 'com.makeramen:roundedimageview:2.3.0'

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.code.gson:gson:2.7'
//    compile 'fm.jiecao:jiecaovideoplayer:4.8.3'
    compile 'cn.finalteam.rxgalleryfinal:library:0.0.8'
    compile 'com.android.support:recyclerview-v7:25.2.0'

}
